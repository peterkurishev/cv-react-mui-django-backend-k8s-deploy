apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
# Name the Ingress resource
  name: cvdswz-ingress
  annotations:
    # Use Traefik as the Ingress controller
    kubernetes.io/ingress.class: traefik
    # Add Cert-Manager SSL certificates as the name of the ClusterIssuer resource
    cert-manager.io/cluster-issuer: letsencrypt-dswz-certificate
spec:
  # TLS configuration for HTTPS
  tls:
    # TLS secretName used on ClusterIssuer
    - secretName: cvdswz.letsencrypt.key.tls
      hosts:
        # Replace with your domain name
        - cv.dswz.ru
  # Create Ingress routing rules
  rules:
  # Replace with your domain name
  - host: cv.dswz.ru
    http:
      paths:
        - path: /api
          pathType: Prefix
          backend:
            service:
              name: cv-app-django-backend
              port:
                number: 8000
        - path: /
          pathType: Prefix
          backend:
            service:
              name: cv-app-react-frontend
              port:
                number: 80

# {{- if .Values.ingress.enabled -}}
# {{- $fullName := include "my-full-stack-app.full-name" . -}}
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: {{ $fullName }}
#   namespace: {{ .Release.Namespace }}
#   annotations:
#     # Аннотации для Traefik
#     traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
#     traefik.ingress.kubernetes.io/router.tls: "true"
#     traefik.ingress.kubernetes.io/router.tls.certresolver: myresolver  # Имя резолвера Let's Encrypt
#     traefik.ingress.kubernetes.io/router.middlewares: "my-full-stack-app-stripprefix@kubernetes2crd"  # Опционально

# spec:
#   ingressClassName: {{ .Values.ingress.className }}
#   rules:
#     - host: {{ .Values.ingress.host }}
#       http:
#         paths:
#           - path: {{ .Values.ingress.path }}
#             pathType: Prefix
#             backend:
#               service:
#                 name: {{ $fullName }}
#                 port:
#                   number: 80
#   {{- if and .Values.ingress.tls.enabled .Values.ingress.tls.letsEncrypt.enabled }}
#   tls:
#     - hosts:
#         - {{ .Values.ingress.host }}
#       secretName: {{ $fullName }}-tls  # Имя секрета для сертификата
#   {{- end }}
# {{- end }}



# {{- if .Values.ingress.enabled }}
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: {{ include "full-name" . }}
#   annotations:
#     {{- range $key, $value := .Values.ingress.annotations }}
#     {{ $key }}: {{ $value | quote }}
#     {{- end }}
#     kubernetes.io/ingress.class: traefik
#     # Add Cert-Manager SSL certificates as the name of the ClusterIssuer resource
#     cert-manager.io/cluster-issuer: letsencrypt-cvdswz-certificate
    
# spec:
#   tls:
#     # TLS secretName used on ClusterIssuer
#     - secretName: cvdswz.letsencrypt.key.tls
#       hosts:
#         # Replace with your domain name
#         - {{ .Values.ingress.host }}
#   rules:
#     - host: {{ .Values.ingress.host }}
#       http:
#         paths:
#           - path: /api
#             pathType: Prefix
#             backend:
#               service:
#                 name: {{ include "django-backend.fullname" . }}
#                 port:
#                   number: {{ .Values.backend.service.port }}
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: {{ include "react-frontend.fullname" . }}
#                 port:
#                   number: {{ .Values.frontend.service.port }}
# {{- end }}
